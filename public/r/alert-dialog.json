{
  "name": "alert-dialog",
  "title": "Alert Dialog",
  "description": "A Alert Dialog Component",
  "type": "registry:ui",
  "files": [
    {
      "path": "registry/components/ui/alert-dialog.tsx",
      "type": "registry:ui",
      "content": "'use client'\r\n\r\nimport * as React from 'react'\r\nimport * as AlertDialogPrimitive from '@radix-ui/react-alert-dialog'\r\n\r\nimport { cn } from '@/lib/utils'\r\nimport { buttonVariants } from './button'\r\nimport { AnimatePresence, motion } from 'motion/react'\r\n\r\nconst AlertDialogStateContext = React.createContext<boolean | undefined>(undefined);\r\n\r\nconst AlertDialog = ({ ...props }: React.ComponentProps<typeof AlertDialogPrimitive.Root>) => {\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n\r\n  return (\r\n    <AlertDialogStateContext.Provider value={isOpen}>\r\n      <AlertDialogPrimitive.Root\r\n        open={isOpen}\r\n        onOpenChange={setIsOpen}\r\n        data-slot='alert-dialog'\r\n        {...props}\r\n      />\r\n    </AlertDialogStateContext.Provider>\r\n  )\r\n}\r\n\r\nconst AlertDialogTrigger = ({ ...props }: React.ComponentProps<typeof AlertDialogPrimitive.Trigger>) => (\r\n  <AlertDialogPrimitive.Trigger\r\n    data-slot='alert-dialog-trigger'\r\n    {...props}\r\n  />\r\n)\r\n\r\nconst AlertDialogPortal = ({ ...props }: React.ComponentProps<typeof AlertDialogPrimitive.Portal>) => (\r\n  <AlertDialogPrimitive.Portal\r\n    data-slot='alert-dialog-portal'\r\n    {...props}\r\n  />\r\n)\r\n\r\nconst AlertDialogOverlay = ({ className, ...props }: React.ComponentProps<typeof AlertDialogPrimitive.Overlay>) => {\r\n  const isOpen = React.useContext(AlertDialogStateContext);\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      {\r\n        isOpen && (\r\n          <motion.div\r\n            initial={{\r\n              opacity: 0\r\n            }}\r\n            animate={{\r\n              opacity: 1\r\n            }}\r\n            exit={{\r\n              opacity: 0\r\n            }}\r\n            transition={{\r\n              duration: 0.3\r\n            }}\r\n\r\n            className={cn(\r\n              'fixed inset-0 bg-black/50',\r\n              className\r\n            )}\r\n          >\r\n            <AlertDialogPrimitive.Overlay\r\n              data-slot='alert-dialog-overlay'\r\n              className={cn(\r\n                'fixed inset-0 z-50 bg-black/50',\r\n                className\r\n              )}\r\n              {...props}\r\n            />\r\n          </motion.div>\r\n        )\r\n      }\r\n    </AnimatePresence>\r\n  )\r\n}\r\n\r\nconst AlertDialogContent = ({ className, ...props }: React.ComponentProps<typeof AlertDialogPrimitive.Content>) => {\r\n  const isOpen = React.useContext(AlertDialogStateContext);\r\n\r\n  return (\r\n    <AlertDialogPortal forceMount>\r\n      <AlertDialogOverlay />\r\n      <AnimatePresence initial={false}>\r\n        {\r\n          isOpen && (\r\n            <motion.div\r\n              initial={{\r\n                opacity: 0,\r\n                scale: 0.97,\r\n                x: 30,\r\n                y: -30,\r\n                filter: 'blur(10px)'\r\n              }}\r\n              animate={{\r\n                opacity: 1,\r\n                scale: 1,\r\n                x: 0,\r\n                y: 0,\r\n                filter: 'blur(0px)'\r\n              }}\r\n              exit={{\r\n                opacity: 0,\r\n                scale: 0.95,\r\n                x: 30,\r\n                y: -30,\r\n                filter: 'blur(10px)'\r\n              }}\r\n              transition={{\r\n                duration: 0.25,\r\n              }}\r\n              className='absolute inset-0 h-screen w-full'\r\n            >\r\n              <AlertDialogPrimitive.Content\r\n                data-slot='alert-dialog-content'\r\n                {...props}\r\n                className={cn(\r\n                  'bg-neutral-50 dark:bg-neutral-900 fixed top-1/2 left-1/2 -translate-1/2 z-50 flex flex-col w-full md:max-w-[30rem] max-w-[calc(100vw-2em)] gap-4 rounded-md border border-border p-6 shadow-lg',\r\n                  className\r\n                )}\r\n              />\r\n            </motion.div>\r\n          )\r\n        }\r\n      </AnimatePresence>\r\n    </AlertDialogPortal >\r\n  )\r\n}\r\n\r\nconst AlertDialogHeader = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      'flex flex-col space-y-2 text-center md:text-left',\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\nAlertDialogHeader.displayName = 'AlertDialogHeader'\r\n\r\nconst AlertDialogFooter = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      'mt-4 flex flex-col-reverse md:flex-row md:justify-end gap-2',\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\nAlertDialogFooter.displayName = 'AlertDialogFooter'\r\n\r\nconst AlertDialogTitle = ({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof AlertDialogPrimitive.Title>) => (\r\n  <AlertDialogPrimitive.Title\r\n    data-slot='alert-dialog-title'\r\n    className={cn('text-xl font-semibold', className)}\r\n    {...props}\r\n  />\r\n)\r\n\r\nconst AlertDialogDescription = ({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof AlertDialogPrimitive.Description>) => (\r\n  <AlertDialogPrimitive.Description\r\n    data-slot='alert-dialog-description'\r\n    className={cn('text-muted-foreground text-sm', className)}\r\n    {...props}\r\n  />\r\n)\r\n\r\nconst AlertDialogAction = ({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof AlertDialogPrimitive.Action>) => (\r\n  <AlertDialogPrimitive.Action\r\n    className={cn(buttonVariants(), className)}\r\n    {...props}\r\n  />\r\n)\r\n\r\nconst AlertDialogCancel = ({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof AlertDialogPrimitive.Cancel>) => (\r\n  <AlertDialogPrimitive.Cancel\r\n    className={cn(buttonVariants({ variant: 'outline' }), className)}\r\n    {...props}\r\n  />\r\n)\r\n\r\nexport {\r\n  AlertDialog,\r\n  AlertDialogPortal,\r\n  AlertDialogOverlay,\r\n  AlertDialogTrigger,\r\n  AlertDialogContent,\r\n  AlertDialogHeader,\r\n  AlertDialogFooter,\r\n  AlertDialogTitle,\r\n  AlertDialogDescription,\r\n  AlertDialogAction,\r\n  AlertDialogCancel,\r\n}\r\n"
    }
  ],
  "dependencies": [
    "@radix-ui/react-alert-dialog",
    "motion"
  ],
  "registryDependencies": [
    "button"
  ]
}