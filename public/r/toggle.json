{
  "name": "toggle",
  "title": "Toggle",
  "description": "A Simple fluidic animated toggle",
  "type": "registry:ui",
  "files": [
    {
      "path": "registry/components/ui/toggle.tsx",
      "type": "registry:ui",
      "content": "'use client'\r\n\r\nimport * as React from 'react'\r\nimport { cn } from '@/lib/utils'\r\n\r\nimport { useAnimate } from 'motion/react'\r\n\r\nexport interface ToggleProps\r\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, 'onClick'> {\r\n  isOn: boolean,\r\n  toggleOn: () => void\r\n}\r\n\r\nconst Toggle = React.forwardRef<HTMLDivElement, ToggleProps>(\r\n  ({ className, isOn, toggleOn, ...props }, ref) => {\r\n    const [scope, animate] = useAnimate();\r\n\r\n    const isMounted = React.useRef(true);\r\n\r\n    React.useEffect(() => {\r\n      if (isMounted.current) {\r\n        isMounted.current = false;\r\n        return;\r\n      }\r\n\r\n      (async () => {\r\n        // To fix the sudden jerk if 'isOn' is true be default\r\n        scope.current.style.marginLeft = !isOn ? 'auto' : 0\r\n\r\n        await animate(\r\n          scope.current,\r\n          {\r\n            width: '2.5rem'\r\n          },\r\n          {\r\n            duration: 0.15\r\n          }\r\n        ).finished;\r\n\r\n        scope.current.style.marginLeft = isOn ? 'auto' : 0\r\n\r\n        await animate(\r\n          scope.current,\r\n          {\r\n            width: '1.25rem',\r\n          },\r\n          {\r\n            duration: 0.15\r\n          }\r\n        ).finished;\r\n      })();\r\n    }, [isOn, animate, scope]);\r\n\r\n    return (\r\n      <div\r\n        className={cn(\r\n          'w-12 p-1 rounded-full shadow-[0_1px_1px_rgba(0,0,0,0.05),0_4px_6px_rgba(34,42,53,0.04),0_24px_68px_rgba(47,48,55,0.05),0_2px_3px_rgba(0,0,0,0.04)] cursor-pointer relative transition-colors duration-200',\r\n          isOn ? 'bg-neutral-800 dark:bg-neutral-300' : 'bg-neutral-300 dark:bg-neutral-800',\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n        onClick={toggleOn}\r\n      >\r\n        <div\r\n          ref={scope}\r\n          className={cn(\r\n            'h-5 w-5 rounded-full bg-white dark:bg-black',\r\n            isOn && 'ml-auto'\r\n          )}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n)\r\n\r\nToggle.displayName = 'Toggle'\r\n\r\nexport { Toggle }"
    }
  ],
  "dependencies": [
    "motion"
  ]
}