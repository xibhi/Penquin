{
  "name": "triple-toggle",
  "title": "Triple Toggle",
  "description": "A animated Triple Toggle Component",
  "type": "registry:ui",
  "files": [
    {
      "path": "registry/components/ui/triple-toggle.tsx",
      "type": "registry:ui",
      "content": "import * as React from 'react'\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nimport { IconPointFilled } from '@tabler/icons-react';\r\nimport { motion } from 'motion/react'\r\n\r\nconst SLIDER_OFFSET = '12rem';\r\nconst SUB_SLIDER_OFFSET = '5.5rem';\r\n\r\nconst TripleToggle = ({\r\n  options,\r\n  toggleOptions,\r\n  value,\r\n  className\r\n}: ToggleProps) => {\r\n  const [doubleToggleOn, setDoubleToggleOn] = React.useState(\r\n    options.grouped.subOptions.includes(value)\r\n  );\r\n\r\n  // Set the double toggle (subslider) to 'on' or 'off' according to the selected option\r\n  React.useEffect(() => {\r\n    setDoubleToggleOn(value !== options.main)\r\n  }, [value, options.main])\r\n\r\n  // If no option is selected from subtoggle, select the first option as default\r\n  React.useEffect(() => {\r\n    if (doubleToggleOn && !options.grouped.subOptions.includes(value))\r\n      toggleOptions(options.grouped.subOptions[0]);\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [doubleToggleOn])\r\n\r\n  const optionsVariant = {\r\n    on: {\r\n      scale: 1,\r\n      y: -12,\r\n      width: '100%',\r\n      transition: {\r\n        duration: 0.2,\r\n        type: 'tween',\r\n        ease: 'easeInOut'\r\n      }\r\n    },\r\n    off: {\r\n      scale: 0.8,\r\n      y: 0,\r\n      width: 'max-content',\r\n      transition: {\r\n        duration: 0.2,\r\n        type: 'tween',\r\n        ease: 'easeInOut'\r\n      }\r\n    }\r\n  }\r\n\r\n  const sliderVariant = {\r\n    on: {\r\n      x: '12rem',\r\n      transition: {\r\n        duration: 0.3,\r\n        type: 'tween',\r\n        ease: 'easeInOut'\r\n      }\r\n    },\r\n    off: {\r\n      x: 0,\r\n      transition: {\r\n        duration: 0.3,\r\n        type: 'tween',\r\n        ease: 'easeInOut'\r\n      }\r\n    }\r\n  }\r\n\r\n  const titleVariant = {\r\n    on: {\r\n      opacity: 0,\r\n      scale: 0.8,\r\n      y: 20,\r\n      transition: {\r\n        duration: 0.3,\r\n        type: 'tween',\r\n        ease: 'easeInOut'\r\n      }\r\n    },\r\n    off: {\r\n      opacity: 1,\r\n      scale: 1,\r\n      y: 7,\r\n      transition: {\r\n        duration: 0.3,\r\n        type: 'tween',\r\n        ease: 'easeInOut'\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <motion.div\r\n      initial={false}\r\n      animate={doubleToggleOn ? 'on' : 'off'}\r\n      className={cn(\r\n        'p-1 bg-secondary rounded-full cursor-pointer w-max',\r\n        className\r\n      )}\r\n    >\r\n      <div className='h-12 w-[24rem] rounded-full flex relative'>\r\n        {/* Slider */}\r\n        <motion.div\r\n          initial={{\r\n            x: doubleToggleOn ? SLIDER_OFFSET : 0\r\n          }}\r\n          variants={sliderVariant}\r\n          className='bg-primary h-full w-1/2 absolute rounded-full'\r\n        />\r\n\r\n        <div\r\n          className={cn(\r\n            'h-full w-1/2 rounded-full flex justify-center items-center relative transition-colors',\r\n            doubleToggleOn ? 'text-primary' : 'text-primary-foreground'\r\n          )}\r\n          onClick={() => toggleOptions(options.main)}\r\n        >\r\n          {options.main}\r\n        </div>\r\n        <div\r\n          className='h-full w-1/2 flex flex-col justify-center items-center'\r\n          onClick={() => setDoubleToggleOn(true)}\r\n        >\r\n          <motion.div variants={titleVariant}>\r\n            {options.grouped.title}\r\n          </motion.div>\r\n\r\n          <motion.div\r\n            variants={optionsVariant}\r\n            className={cn(\r\n              'flex justify-between h-full w-full p-1',\r\n              doubleToggleOn ? 'text-primary-foreground' : 'text-primary'\r\n            )}\r\n          >\r\n\r\n            {/* Sub Slider */}\r\n            {\r\n              doubleToggleOn && (\r\n                <motion.div\r\n                  initial={{\r\n                    x: 0,\r\n                  }}\r\n                  animate={{\r\n                    x: value !== options.grouped.subOptions[1] ? 0 : SUB_SLIDER_OFFSET,\r\n                  }}\r\n\r\n                  transition={{\r\n                    type: 'tween',\r\n                    ease: 'easeInOut',\r\n                    duration: 0.2\r\n                  }}\r\n\r\n                  className='bg-primary-foreground h-10 -top-1 w-1/2 absolute rounded-full -z-1'\r\n                />\r\n              )\r\n            }\r\n\r\n            <div\r\n              onClick={() => toggleOptions(options.grouped.subOptions[0])}\r\n              className={cn(\r\n                'w-1/2 text-center h-full relative',\r\n                'transition-colors duration-200',\r\n                doubleToggleOn && (value === options.grouped.subOptions[0] ? 'text-primary' : 'text-primary-foreground'),\r\n              )}\r\n            >\r\n              {options.grouped.subOptions[0]}\r\n            </div>\r\n\r\n            <IconPointFilled className={`my-auto transition-all duration-200 ${doubleToggleOn && 'opacity-0 scale-80'}`} size={12} />\r\n\r\n            <div\r\n              onClick={() => toggleOptions(options.grouped.subOptions[1])}\r\n              className={cn(\r\n                'w-1/2 text-center h-full',\r\n                'transition-colors duration-200',\r\n                doubleToggleOn && (value === options.grouped.subOptions[1] ? 'text-primary' : 'text-primary-foreground'),\r\n              )}\r\n            >\r\n              {options.grouped.subOptions[1]}\r\n            </div>\r\n          </motion.div>\r\n\r\n        </div>\r\n      </div>\r\n    </motion.div>\r\n  )\r\n}\r\n\r\nexport interface ToggleProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  options: {\r\n    main: string,\r\n    grouped: {\r\n      title: string,\r\n      subOptions: [string, string]\r\n    }\r\n  }\r\n  toggleOptions: (val: string) => void,\r\n  value: string\r\n}\r\n\r\nexport { TripleToggle }"
    }
  ],
  "dependencies": [
    "@tabler/icons-react",
    "motion"
  ]
}